{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red42\green49\blue64;\red245\green245\blue246;
\red14\green18\blue29;\red208\green208\blue220;\red39\green40\blue50;\red226\green131\blue14;\red0\green0\blue0;
\red255\green255\blue255;\red255\green255\blue255;\red20\green152\blue106;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c21569\c25490\c31765;\cssrgb\c96863\c96863\c97255;
\cssrgb\c6667\c9412\c15294;\cssrgb\c85098\c85098\c89020;\cssrgb\c20392\c20784\c25490;\cssrgb\c91373\c58431\c4706;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c100000\c100000\c50196;\cssrgb\c0\c65098\c49020;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 9/21/2021\
A public ssh key is now required to push repos remotely.\
The key is located at 
\f1\fs22 \cf2 \CocoaLigature0 open ~/.ssh/\
I added the config file \
The ssh key is in id_ed25519.pub\
GitHub account username: ysheu2\
Passcode: BsXXXXXXXX##\
\
1/19/2024: use pycharm to edit the html.\
\
\
The best way in the future to make updates on the website is to edit the content using BBEdit, then use Github Desktop (an app in Applications) to 1) commit to master (add summary), then push to publish.  Very easy.  The app would automatically detect changes.\
\
\pard\pardeftab720\sa400\partightenfactor0

\f0\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 To push changes to a Git repository using the shell (command line), follow these steps:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b \cf5 \cb4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Navigate to Your Repository:
\f0\b0 \cf3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Open a terminal or command prompt and navigate to the directory of your Git repository using the 
\f2\b\fs28 \cf5 cd
\f0\b0\fs32 \cf3  command. For example:\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf8 \cb9 cd\cf10  /path/to/your/repository\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 
\fs32 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b \cf5 \cb4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Check Status:
\f0\b0 \cf3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Before pushing, it's a good practice to check the status of your repository using the 
\f2\b\fs28 \cf5 git status
\f0\b0\fs32 \cf3  command. This will show you the current state of your changes.\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf10 \cb9 git status\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 
\fs32 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b \cf5 \cb4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Add Changes to Staging:
\f0\b0 \cf3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Use the 
\f2\b\fs28 \cf5 git add
\f0\b0\fs32 \cf3  command to stage the changes you want to include in the next commit. You can add specific files or directories, or use 
\f2\b\fs28 \cf5 .
\f0\b0\fs32 \cf3  to add all changes.\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf10 \cb9 git add <file1> <file2> ...   \cf11 # Stage specific files\cf10 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf10 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
git add .                      \cf11 # Stage all changes\cf10 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 
\fs32 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b \cf5 \cb4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Commit Changes:
\f0\b0 \cf3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Create a commit to record your staged changes along with a meaningful commit message using the 
\f2\b\fs28 \cf5 git commit
\f0\b0\fs32 \cf3  command.\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf10 \cb9 git commit -m \cf12 "Your commit message here"\cf10 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 
\fs32 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b \cf5 \cb4 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Push Changes:
\f0\b0 \cf3 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Finally, use the 
\f2\b\fs28 \cf5 git push
\f0\b0\fs32 \cf3  command to send your committed changes to the remote repository. You'll need to specify the remote repository's name (usually "origin") and the branch you want to push.\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf10 \cb9 git push <remote-name> <branch-name>\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 \cb1 \uc0\u8232 
\fs32 \cb4 For example, if your remote is named "origin" and you want to push changes to the "main" branch:\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf10 \cb9 git push origin main\
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 \cb1 \uc0\u8232 
\fs32 \cb4 If you're pushing for the first time, you might need to set the upstream branch. You can do this using the 
\f2\b\fs28 \cf5 -u
\f0\b0\fs32 \cf3  flag:\cb1 \uc0\u8232 
\fs24 \cf6 \cb7 sh\cb1 \uc0\u8232 \u8232 \cb7 Copy code
\fs28 \cf10 \cb9 git push -u origin main\
\ls1\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
\uc0\u8232 \cb9 \uc0\u8232 
\fs32 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf3 \cb4 That's it! Your changes should now be pushed to the remote repository. Make sure you have the necessary permissions to push to the remote repository. If you encounter any issues or errors, carefully review the error message for troubleshooting information.}